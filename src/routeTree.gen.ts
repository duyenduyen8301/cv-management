/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ProtectedImport } from "./routes/_protected";
import { Route as AuthImport } from "./routes/_auth";
import { Route as AppImport } from "./routes/_app";
import { Route as AppIndexImport } from "./routes/_app.index";
import { Route as AuthRegisterImport } from "./routes/_auth.register";
import { Route as AuthLoginImport } from "./routes/_auth.login";
import { Route as AppServicesImport } from "./routes/_app.services";
import { Route as AppPricingImport } from "./routes/_app.pricing";
import { Route as AppCvsImport } from "./routes/_app.cvs";
import { Route as AppContactImport } from "./routes/_app.contact";
import { Route as AppChatImport } from "./routes/_app.chat";
import { Route as AppAboutImport } from "./routes/_app.about";
import { Route as ProtectedMypageSettingsImport } from "./routes/_protected.mypage.settings";
import { Route as ProtectedMypageProfileImport } from "./routes/_protected.mypage.profile";
import { Route as ProtectedMypageNotificationsImport } from "./routes/_protected.mypage.notifications";
import { Route as ProtectedMypageMessagesImport } from "./routes/_protected.mypage.messages";
import { Route as ProtectedMypageCvManagementImport } from "./routes/_protected.mypage.cv-management";
import { Route as ProtectedMypageCreateCvImport } from "./routes/_protected.mypage.create-cv";
import { Route as ProtectedMypageApplyImport } from "./routes/_protected.mypage.apply";
import { Route as ProtectedMypageApplicationsImport } from "./routes/_protected.mypage.applications";
import { Route as AppCvIdImport } from "./routes/_app.cv.$id";
import { Route as ProtectedMypageEditCvIdImport } from "./routes/_protected.mypage.edit-cv.$id";

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
	id: "/_protected",
	getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
	id: "/_auth",
	getParentRoute: () => rootRoute,
} as any);

const AppRoute = AppImport.update({
	id: "/_app",
	getParentRoute: () => rootRoute,
} as any);

const AppIndexRoute = AppIndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => AppRoute,
} as any);

const AuthRegisterRoute = AuthRegisterImport.update({
	id: "/register",
	path: "/register",
	getParentRoute: () => AuthRoute,
} as any);

const AuthLoginRoute = AuthLoginImport.update({
	id: "/login",
	path: "/login",
	getParentRoute: () => AuthRoute,
} as any);

const AppServicesRoute = AppServicesImport.update({
	id: "/services",
	path: "/services",
	getParentRoute: () => AppRoute,
} as any);

const AppPricingRoute = AppPricingImport.update({
	id: "/pricing",
	path: "/pricing",
	getParentRoute: () => AppRoute,
} as any);

const AppCvsRoute = AppCvsImport.update({
	id: "/cvs",
	path: "/cvs",
	getParentRoute: () => AppRoute,
} as any);

const AppContactRoute = AppContactImport.update({
	id: "/contact",
	path: "/contact",
	getParentRoute: () => AppRoute,
} as any);

const AppChatRoute = AppChatImport.update({
	id: "/chat",
	path: "/chat",
	getParentRoute: () => AppRoute,
} as any);

const AppAboutRoute = AppAboutImport.update({
	id: "/about",
	path: "/about",
	getParentRoute: () => AppRoute,
} as any);

const ProtectedMypageSettingsRoute = ProtectedMypageSettingsImport.update({
	id: "/mypage/settings",
	path: "/mypage/settings",
	getParentRoute: () => ProtectedRoute,
} as any);

const ProtectedMypageProfileRoute = ProtectedMypageProfileImport.update({
	id: "/mypage/profile",
	path: "/mypage/profile",
	getParentRoute: () => ProtectedRoute,
} as any);

const ProtectedMypageNotificationsRoute =
	ProtectedMypageNotificationsImport.update({
		id: "/mypage/notifications",
		path: "/mypage/notifications",
		getParentRoute: () => ProtectedRoute,
	} as any);

const ProtectedMypageMessagesRoute = ProtectedMypageMessagesImport.update({
	id: "/mypage/messages",
	path: "/mypage/messages",
	getParentRoute: () => ProtectedRoute,
} as any);

const ProtectedMypageCvManagementRoute =
	ProtectedMypageCvManagementImport.update({
		id: "/mypage/cv-management",
		path: "/mypage/cv-management",
		getParentRoute: () => ProtectedRoute,
	} as any);

const ProtectedMypageCreateCvRoute = ProtectedMypageCreateCvImport.update({
	id: "/mypage/create-cv",
	path: "/mypage/create-cv",
	getParentRoute: () => ProtectedRoute,
} as any);

const ProtectedMypageApplyRoute = ProtectedMypageApplyImport.update({
	id: "/mypage/apply",
	path: "/mypage/apply",
	getParentRoute: () => ProtectedRoute,
} as any);

const ProtectedMypageApplicationsRoute =
	ProtectedMypageApplicationsImport.update({
		id: "/mypage/applications",
		path: "/mypage/applications",
		getParentRoute: () => ProtectedRoute,
	} as any);

const AppCvIdRoute = AppCvIdImport.update({
	id: "/cv/$id",
	path: "/cv/$id",
	getParentRoute: () => AppRoute,
} as any);

const ProtectedMypageEditCvIdRoute = ProtectedMypageEditCvIdImport.update({
	id: "/mypage/edit-cv/$id",
	path: "/mypage/edit-cv/$id",
	getParentRoute: () => ProtectedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/_app": {
			id: "/_app";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof AppImport;
			parentRoute: typeof rootRoute;
		};
		"/_auth": {
			id: "/_auth";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof AuthImport;
			parentRoute: typeof rootRoute;
		};
		"/_protected": {
			id: "/_protected";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof ProtectedImport;
			parentRoute: typeof rootRoute;
		};
		"/_app/about": {
			id: "/_app/about";
			path: "/about";
			fullPath: "/about";
			preLoaderRoute: typeof AppAboutImport;
			parentRoute: typeof AppImport;
		};
		"/_app/chat": {
			id: "/_app/chat";
			path: "/chat";
			fullPath: "/chat";
			preLoaderRoute: typeof AppChatImport;
			parentRoute: typeof AppImport;
		};
		"/_app/contact": {
			id: "/_app/contact";
			path: "/contact";
			fullPath: "/contact";
			preLoaderRoute: typeof AppContactImport;
			parentRoute: typeof AppImport;
		};
		"/_app/cvs": {
			id: "/_app/cvs";
			path: "/cvs";
			fullPath: "/cvs";
			preLoaderRoute: typeof AppCvsImport;
			parentRoute: typeof AppImport;
		};
		"/_app/pricing": {
			id: "/_app/pricing";
			path: "/pricing";
			fullPath: "/pricing";
			preLoaderRoute: typeof AppPricingImport;
			parentRoute: typeof AppImport;
		};
		"/_app/services": {
			id: "/_app/services";
			path: "/services";
			fullPath: "/services";
			preLoaderRoute: typeof AppServicesImport;
			parentRoute: typeof AppImport;
		};
		"/_auth/login": {
			id: "/_auth/login";
			path: "/login";
			fullPath: "/login";
			preLoaderRoute: typeof AuthLoginImport;
			parentRoute: typeof AuthImport;
		};
		"/_auth/register": {
			id: "/_auth/register";
			path: "/register";
			fullPath: "/register";
			preLoaderRoute: typeof AuthRegisterImport;
			parentRoute: typeof AuthImport;
		};
		"/_app/": {
			id: "/_app/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof AppIndexImport;
			parentRoute: typeof AppImport;
		};
		"/_app/cv/$id": {
			id: "/_app/cv/$id";
			path: "/cv/$id";
			fullPath: "/cv/$id";
			preLoaderRoute: typeof AppCvIdImport;
			parentRoute: typeof AppImport;
		};
		"/_protected/mypage/applications": {
			id: "/_protected/mypage/applications";
			path: "/mypage/applications";
			fullPath: "/mypage/applications";
			preLoaderRoute: typeof ProtectedMypageApplicationsImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/apply": {
			id: "/_protected/mypage/apply";
			path: "/mypage/apply";
			fullPath: "/mypage/apply";
			preLoaderRoute: typeof ProtectedMypageApplyImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/create-cv": {
			id: "/_protected/mypage/create-cv";
			path: "/mypage/create-cv";
			fullPath: "/mypage/create-cv";
			preLoaderRoute: typeof ProtectedMypageCreateCvImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/cv-management": {
			id: "/_protected/mypage/cv-management";
			path: "/mypage/cv-management";
			fullPath: "/mypage/cv-management";
			preLoaderRoute: typeof ProtectedMypageCvManagementImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/messages": {
			id: "/_protected/mypage/messages";
			path: "/mypage/messages";
			fullPath: "/mypage/messages";
			preLoaderRoute: typeof ProtectedMypageMessagesImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/notifications": {
			id: "/_protected/mypage/notifications";
			path: "/mypage/notifications";
			fullPath: "/mypage/notifications";
			preLoaderRoute: typeof ProtectedMypageNotificationsImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/profile": {
			id: "/_protected/mypage/profile";
			path: "/mypage/profile";
			fullPath: "/mypage/profile";
			preLoaderRoute: typeof ProtectedMypageProfileImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/settings": {
			id: "/_protected/mypage/settings";
			path: "/mypage/settings";
			fullPath: "/mypage/settings";
			preLoaderRoute: typeof ProtectedMypageSettingsImport;
			parentRoute: typeof ProtectedImport;
		};
		"/_protected/mypage/edit-cv/$id": {
			id: "/_protected/mypage/edit-cv/$id";
			path: "/mypage/edit-cv/$id";
			fullPath: "/mypage/edit-cv/$id";
			preLoaderRoute: typeof ProtectedMypageEditCvIdImport;
			parentRoute: typeof ProtectedImport;
		};
	}
}

// Create and export the route tree

interface AppRouteChildren {
	AppAboutRoute: typeof AppAboutRoute;
	AppChatRoute: typeof AppChatRoute;
	AppContactRoute: typeof AppContactRoute;
	AppCvsRoute: typeof AppCvsRoute;
	AppPricingRoute: typeof AppPricingRoute;
	AppServicesRoute: typeof AppServicesRoute;
	AppIndexRoute: typeof AppIndexRoute;
	AppCvIdRoute: typeof AppCvIdRoute;
}

const AppRouteChildren: AppRouteChildren = {
	AppAboutRoute: AppAboutRoute,
	AppChatRoute: AppChatRoute,
	AppContactRoute: AppContactRoute,
	AppCvsRoute: AppCvsRoute,
	AppPricingRoute: AppPricingRoute,
	AppServicesRoute: AppServicesRoute,
	AppIndexRoute: AppIndexRoute,
	AppCvIdRoute: AppCvIdRoute,
};

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren);

interface AuthRouteChildren {
	AuthLoginRoute: typeof AuthLoginRoute;
	AuthRegisterRoute: typeof AuthRegisterRoute;
}

const AuthRouteChildren: AuthRouteChildren = {
	AuthLoginRoute: AuthLoginRoute,
	AuthRegisterRoute: AuthRegisterRoute,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

interface ProtectedRouteChildren {
	ProtectedMypageApplicationsRoute: typeof ProtectedMypageApplicationsRoute;
	ProtectedMypageApplyRoute: typeof ProtectedMypageApplyRoute;
	ProtectedMypageCreateCvRoute: typeof ProtectedMypageCreateCvRoute;
	ProtectedMypageCvManagementRoute: typeof ProtectedMypageCvManagementRoute;
	ProtectedMypageMessagesRoute: typeof ProtectedMypageMessagesRoute;
	ProtectedMypageNotificationsRoute: typeof ProtectedMypageNotificationsRoute;
	ProtectedMypageProfileRoute: typeof ProtectedMypageProfileRoute;
	ProtectedMypageSettingsRoute: typeof ProtectedMypageSettingsRoute;
	ProtectedMypageEditCvIdRoute: typeof ProtectedMypageEditCvIdRoute;
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
	ProtectedMypageApplicationsRoute: ProtectedMypageApplicationsRoute,
	ProtectedMypageApplyRoute: ProtectedMypageApplyRoute,
	ProtectedMypageCreateCvRoute: ProtectedMypageCreateCvRoute,
	ProtectedMypageCvManagementRoute: ProtectedMypageCvManagementRoute,
	ProtectedMypageMessagesRoute: ProtectedMypageMessagesRoute,
	ProtectedMypageNotificationsRoute: ProtectedMypageNotificationsRoute,
	ProtectedMypageProfileRoute: ProtectedMypageProfileRoute,
	ProtectedMypageSettingsRoute: ProtectedMypageSettingsRoute,
	ProtectedMypageEditCvIdRoute: ProtectedMypageEditCvIdRoute,
};

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
	ProtectedRouteChildren
);

export interface FileRoutesByFullPath {
	"": typeof ProtectedRouteWithChildren;
	"/about": typeof AppAboutRoute;
	"/chat": typeof AppChatRoute;
	"/contact": typeof AppContactRoute;
	"/cvs": typeof AppCvsRoute;
	"/pricing": typeof AppPricingRoute;
	"/services": typeof AppServicesRoute;
	"/login": typeof AuthLoginRoute;
	"/register": typeof AuthRegisterRoute;
	"/": typeof AppIndexRoute;
	"/cv/$id": typeof AppCvIdRoute;
	"/mypage/applications": typeof ProtectedMypageApplicationsRoute;
	"/mypage/apply": typeof ProtectedMypageApplyRoute;
	"/mypage/create-cv": typeof ProtectedMypageCreateCvRoute;
	"/mypage/cv-management": typeof ProtectedMypageCvManagementRoute;
	"/mypage/messages": typeof ProtectedMypageMessagesRoute;
	"/mypage/notifications": typeof ProtectedMypageNotificationsRoute;
	"/mypage/profile": typeof ProtectedMypageProfileRoute;
	"/mypage/settings": typeof ProtectedMypageSettingsRoute;
	"/mypage/edit-cv/$id": typeof ProtectedMypageEditCvIdRoute;
}

export interface FileRoutesByTo {
	"": typeof ProtectedRouteWithChildren;
	"/about": typeof AppAboutRoute;
	"/chat": typeof AppChatRoute;
	"/contact": typeof AppContactRoute;
	"/cvs": typeof AppCvsRoute;
	"/pricing": typeof AppPricingRoute;
	"/services": typeof AppServicesRoute;
	"/login": typeof AuthLoginRoute;
	"/register": typeof AuthRegisterRoute;
	"/": typeof AppIndexRoute;
	"/cv/$id": typeof AppCvIdRoute;
	"/mypage/applications": typeof ProtectedMypageApplicationsRoute;
	"/mypage/apply": typeof ProtectedMypageApplyRoute;
	"/mypage/create-cv": typeof ProtectedMypageCreateCvRoute;
	"/mypage/cv-management": typeof ProtectedMypageCvManagementRoute;
	"/mypage/messages": typeof ProtectedMypageMessagesRoute;
	"/mypage/notifications": typeof ProtectedMypageNotificationsRoute;
	"/mypage/profile": typeof ProtectedMypageProfileRoute;
	"/mypage/settings": typeof ProtectedMypageSettingsRoute;
	"/mypage/edit-cv/$id": typeof ProtectedMypageEditCvIdRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/_app": typeof AppRouteWithChildren;
	"/_auth": typeof AuthRouteWithChildren;
	"/_protected": typeof ProtectedRouteWithChildren;
	"/_app/about": typeof AppAboutRoute;
	"/_app/chat": typeof AppChatRoute;
	"/_app/contact": typeof AppContactRoute;
	"/_app/cvs": typeof AppCvsRoute;
	"/_app/pricing": typeof AppPricingRoute;
	"/_app/services": typeof AppServicesRoute;
	"/_auth/login": typeof AuthLoginRoute;
	"/_auth/register": typeof AuthRegisterRoute;
	"/_app/": typeof AppIndexRoute;
	"/_app/cv/$id": typeof AppCvIdRoute;
	"/_protected/mypage/applications": typeof ProtectedMypageApplicationsRoute;
	"/_protected/mypage/apply": typeof ProtectedMypageApplyRoute;
	"/_protected/mypage/create-cv": typeof ProtectedMypageCreateCvRoute;
	"/_protected/mypage/cv-management": typeof ProtectedMypageCvManagementRoute;
	"/_protected/mypage/messages": typeof ProtectedMypageMessagesRoute;
	"/_protected/mypage/notifications": typeof ProtectedMypageNotificationsRoute;
	"/_protected/mypage/profile": typeof ProtectedMypageProfileRoute;
	"/_protected/mypage/settings": typeof ProtectedMypageSettingsRoute;
	"/_protected/mypage/edit-cv/$id": typeof ProtectedMypageEditCvIdRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| ""
		| "/about"
		| "/chat"
		| "/contact"
		| "/cvs"
		| "/pricing"
		| "/services"
		| "/login"
		| "/register"
		| "/"
		| "/cv/$id"
		| "/mypage/applications"
		| "/mypage/apply"
		| "/mypage/create-cv"
		| "/mypage/cv-management"
		| "/mypage/messages"
		| "/mypage/notifications"
		| "/mypage/profile"
		| "/mypage/settings"
		| "/mypage/edit-cv/$id";
	fileRoutesByTo: FileRoutesByTo;
	to:
		| ""
		| "/about"
		| "/chat"
		| "/contact"
		| "/cvs"
		| "/pricing"
		| "/services"
		| "/login"
		| "/register"
		| "/"
		| "/cv/$id"
		| "/mypage/applications"
		| "/mypage/apply"
		| "/mypage/create-cv"
		| "/mypage/cv-management"
		| "/mypage/messages"
		| "/mypage/notifications"
		| "/mypage/profile"
		| "/mypage/settings"
		| "/mypage/edit-cv/$id";
	id:
		| "__root__"
		| "/_app"
		| "/_auth"
		| "/_protected"
		| "/_app/about"
		| "/_app/chat"
		| "/_app/contact"
		| "/_app/cvs"
		| "/_app/pricing"
		| "/_app/services"
		| "/_auth/login"
		| "/_auth/register"
		| "/_app/"
		| "/_app/cv/$id"
		| "/_protected/mypage/applications"
		| "/_protected/mypage/apply"
		| "/_protected/mypage/create-cv"
		| "/_protected/mypage/cv-management"
		| "/_protected/mypage/messages"
		| "/_protected/mypage/notifications"
		| "/_protected/mypage/profile"
		| "/_protected/mypage/settings"
		| "/_protected/mypage/edit-cv/$id";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	AppRoute: typeof AppRouteWithChildren;
	AuthRoute: typeof AuthRouteWithChildren;
	ProtectedRoute: typeof ProtectedRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	AppRoute: AppRouteWithChildren,
	AuthRoute: AuthRouteWithChildren,
	ProtectedRoute: ProtectedRouteWithChildren,
};

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/_app",
        "/_auth",
        "/_protected"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/about",
        "/_app/chat",
        "/_app/contact",
        "/_app/cvs",
        "/_app/pricing",
        "/_app/services",
        "/_app/",
        "/_app/cv/$id"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/mypage/applications",
        "/_protected/mypage/apply",
        "/_protected/mypage/create-cv",
        "/_protected/mypage/cv-management",
        "/_protected/mypage/messages",
        "/_protected/mypage/notifications",
        "/_protected/mypage/profile",
        "/_protected/mypage/settings",
        "/_protected/mypage/edit-cv/$id"
      ]
    },
    "/_app/about": {
      "filePath": "_app.about.tsx",
      "parent": "/_app"
    },
    "/_app/chat": {
      "filePath": "_app.chat.ts",
      "parent": "/_app"
    },
    "/_app/contact": {
      "filePath": "_app.contact.tsx",
      "parent": "/_app"
    },
    "/_app/cvs": {
      "filePath": "_app.cvs.tsx",
      "parent": "/_app"
    },
    "/_app/pricing": {
      "filePath": "_app.pricing.tsx",
      "parent": "/_app"
    },
    "/_app/services": {
      "filePath": "_app.services.tsx",
      "parent": "/_app"
    },
    "/_auth/login": {
      "filePath": "_auth.login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth.register.tsx",
      "parent": "/_auth"
    },
    "/_app/": {
      "filePath": "_app.index.ts",
      "parent": "/_app"
    },
    "/_app/cv/$id": {
      "filePath": "_app.cv.$id.tsx",
      "parent": "/_app"
    },
    "/_protected/mypage/applications": {
      "filePath": "_protected.mypage.applications.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/apply": {
      "filePath": "_protected.mypage.apply.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/create-cv": {
      "filePath": "_protected.mypage.create-cv.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/cv-management": {
      "filePath": "_protected.mypage.cv-management.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/messages": {
      "filePath": "_protected.mypage.messages.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/notifications": {
      "filePath": "_protected.mypage.notifications.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/profile": {
      "filePath": "_protected.mypage.profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/settings": {
      "filePath": "_protected.mypage.settings.tsx",
      "parent": "/_protected"
    },
    "/_protected/mypage/edit-cv/$id": {
      "filePath": "_protected.mypage.edit-cv.$id.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
